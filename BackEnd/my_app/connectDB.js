const path = require("path");
// require("dotenv").config({ path: path.resolve(__dirname, ".env") });
require("dotenv").config();


// Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ th∆∞ m·ª•c g·ªëc
console.log("üìÇ ƒê∆∞·ªùng d·∫´n file .env:", path.resolve(__dirname, ".env"));

console.log("üîç Ki·ªÉm tra bi·∫øn m√¥i tr∆∞·ªùng:");
console.log("DB_USER:", process.env.DB_USER);
console.log("DB_PASSWORD:", process.env.DB_PASSWORD ? "*****" : "Kh√¥ng c√≥ d·ªØ li·ªáu");
console.log("DB_SERVER:", process.env.DB_SERVER);
console.log("DB_DATABASE:", process.env.DB_DATABASE);
console.log("DB_PORT:", process.env.DB_PORT);
console.log("DB_ENCRYPT:", process.env.DB_ENCRYPT);
// Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env
const sql = require("mssql"); // Import th∆∞ vi·ªán mssql ƒë·ªÉ l√†m vi·ªác v·ªõi SQL Server

// C·∫•u h√¨nh k·∫øt n·ªëi SQL Server t·ª´ file .env
const config = {
    user: process.env.DB_USER, // L·∫•y user t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
    password: process.env.DB_PASSWORD, // L·∫•y password t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
    server: process.env.DB_SERVER, // L·∫•y server t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
    database: process.env.DB_DATABASE, // L·∫•y database t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
    port: Number(process.env.DB_PORT) || 1433, // Chuy·ªÉn port th√†nh s·ªë nguy√™n, m·∫∑c ƒë·ªãnh 1433
    options: {
        encrypt: process.env.DB_ENCRYPT === "true", // D√πng SSL n·∫øu ƒë·∫∑t true
        enableArithAbort: true, // H·ªó tr·ª£ x·ª≠ l√Ω to√°n h·ªçc
        trustServerCertificate: true, // B·∫Øt bu·ªôc khi ch·∫°y local
    },
};




// Function k·∫øt n·ªëi ƒë·∫øn SQL Server
async function connectDB() {
    try {
        await sql.connect(config); // K·∫øt n·ªëi SQL Server
        console.log("‚úÖ K·∫øt n·ªëi SQL Server th√†nh c√¥ng!");
    } catch (err) {
        console.error("‚ùå L·ªói k·∫øt n·ªëi SQL Server:", err.message);
        console.error("Chi ti·∫øt l·ªói:", err);
        process.exit(1); // Tho√°t khi k·∫øt n·ªëi th·∫•t b·∫°i
    }
}

// Xu·∫•t module ƒë·ªÉ file kh√°c c√≥ th·ªÉ s·ª≠ d·ª•ng
module.exports = {
    connectDB,
    sql,
    config
};