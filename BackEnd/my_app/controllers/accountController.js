const { sql } = require("../connectDB");
const { createTransaction } = require("../controllers/transactionController");

// L·∫•y danh s√°ch t√†i kho·∫£n
const getAccounts = async(req, res) => {
    try {
        const result = await sql.query `SELECT * FROM accounts`;
        res.json({ accounts: result.recordset });
    } catch (error) {
        console.error("‚ùå L·ªói l·∫•y danh s√°ch t√†i kho·∫£n:", error.message);
        res.status(500).json({ error: `L·ªói l·∫•y danh s√°ch t√†i kho·∫£n: ${error.message}` });
    }
};

// L·∫•y s·ªë d∆∞ theo user_id
const getBalance = async(req, res) => {
    try {
        const { user_id } = req.params;
        console.log("üìå Nh·∫≠n user_id t·ª´ URL:", user_id);

        if (!user_id) return res.status(400).json({ error: "Thi·∫øu user_id" });

        // Chuy·ªÉn `user_id` sang s·ªë nguy√™n
        const userId = parseInt(user_id, 10);
        console.log("üìå userId ƒë√£ chuy·ªÉn ƒë·ªïi:", userId);

        if (isNaN(userId)) return res.status(400).json({ error: "user_id kh√¥ng h·ª£p l·ªá" });

        const result = await sql.query `
            SELECT balance FROM accounts WHERE user_id = ${userId}
        `;

        console.log("üìå K·∫øt qu·∫£ truy v·∫•n:", result.recordset);

        if (result.recordset.length === 0) {
            return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n" });
        }

        res.json({ balance: result.recordset[0].balance });
    } catch (error) {
        console.error("‚ùå L·ªói l·∫•y s·ªë d∆∞ t√†i kho·∫£n:", error.message);
        res.status(500).json({ error: `L·ªói l·∫•y s·ªë d∆∞ t√†i kho·∫£n: ${error.message}` });
    }
};



// N·∫°p ti·ªÅn v√†o t√†i kho·∫£n
const depositMoney = async(req, res) => {
    try {
        const { user_id, amount } = req.body; // üìå L·∫•y d·ªØ li·ªáu t·ª´ `body`, kh√¥ng ph·∫£i `params`

        if (!user_id || !amount) {
            return res.status(400).json({ error: "Thi·∫øu user_id ho·∫∑c amount!" });
        }

        // Th·ª±c hi·ªán truy v·∫•n ƒë·ªÉ c·∫≠p nh·∫≠t s·ªë d∆∞ t√†i kho·∫£n
        const result = await sql.query(
            `UPDATE accounts SET balance = balance + ${amount} WHERE user_id = ${user_id}`
        );

        if (result.rowsAffected[0] > 0) {
            res.json({ success: true, message: "N·∫°p ti·ªÅn th√†nh c√¥ng!" });
        } else {
            res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n!" });
        }
    } catch (err) {
        console.error("‚ùå L·ªói n·∫°p ti·ªÅn:", err.message);
        res.status(500).json({ error: "L·ªói server!" });
    }
};


module.exports = { getAccounts, getBalance, depositMoney, createTransaction };